<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="246" onload="init(evt)" viewBox="0 0 1200 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="246.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >assetstorage.mo</text>
<text id="details" x="10.00" y="229" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="229" > </text>
<g id="frames">
<g >
<title>reply_with_data (8 samples, 0.02%)</title><rect x="417.0" y="133" width="0.3" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="420.04" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::types::Blob::shrink::h14b86b8c0774f2df (45 samples, 0.11%)</title><rect x="364.4" y="133" width="1.3" height="15.0" fill="rgb(249,127,48)" rx="2" ry="2" />
<text  x="367.37" y="143.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="806.4" y="165" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="809.41" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h98668a022d1f7054 (122 samples, 0.30%)</title><rect x="583.9" y="85" width="3.6" height="15.0" fill="rgb(241,127,40)" rx="2" ry="2" />
<text  x="586.95" y="95.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="505.0" y="133" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="507.98" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="634.8" y="101" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="637.84" y="111.5" ></text>
</g>
<g >
<title>trans_state7 (26 samples, 0.06%)</title><rect x="623.2" y="165" width="0.8" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="626.24" y="175.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="732.5" y="85" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="735.47" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_get_range::h15ee242776face5a (28 samples, 0.07%)</title><rect x="648.4" y="53" width="0.8" height="15.0" fill="rgb(229,127,26)" rx="2" ry="2" />
<text  x="651.39" y="63.5" ></text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="576.6" y="101" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="579.64" y="111.5" ></text>
</g>
<g >
<title>sleb128_decode (168 samples, 0.42%)</title><rect x="801.3" y="149" width="4.9" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="804.33" y="159.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.33%)</title><rect x="598.5" y="149" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="601.47" y="159.5" ></text>
</g>
<g >
<title>memcpy (1,050 samples, 2.60%)</title><rect x="173.0" y="133" width="30.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="175.99" y="143.5" >me..</text>
</g>
<g >
<title>@mut_array_size (57 samples, 0.14%)</title><rect x="514.6" y="85" width="1.7" height="15.0" fill="rgb(245,118,44)" rx="2" ry="2" />
<text  x="517.59" y="95.5" ></text>
</g>
<g >
<title>canister_self (60 samples, 0.15%)</title><rect x="365.7" y="149" width="1.7" height="15.0" fill="rgb(238,106,36)" rx="2" ry="2" />
<text  x="368.69" y="159.5" ></text>
</g>
<g >
<title>Text.compare_eq (281 samples, 0.70%)</title><rect x="641.0" y="101" width="8.2" height="15.0" fill="rgb(239,187,38)" rx="2" ry="2" />
<text  x="644.00" y="111.5" ></text>
</g>
<g >
<title>B_gt (11 samples, 0.03%)</title><rect x="526.9" y="85" width="0.3" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="529.89" y="95.5" ></text>
</g>
<g >
<title>$lambda (845 samples, 2.09%)</title><rect x="392.6" y="149" width="24.7" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="395.59" y="159.5" >$..</text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::h98bc6a3e2ad1f00a (237 samples, 0.59%)</title><rect x="650.5" y="69" width="7.0" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="653.53" y="79.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.28%)</title><rect x="736.8" y="117" width="3.3" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="739.77" y="127.5" ></text>
</g>
<g >
<title>to_4_tuple (63 samples, 0.16%)</title><rect x="740.1" y="117" width="1.8" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="743.10" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (44 samples, 0.11%)</title><rect x="412.3" y="101" width="1.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="415.31" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="670.5" y="101" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="673.45" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::hd71251f77789891b (1,368 samples, 3.39%)</title><rect x="1110.9" y="133" width="40.0" height="15.0" fill="rgb(229,127,26)" rx="2" ry="2" />
<text  x="1113.95" y="143.5" >mot..</text>
</g>
<g >
<title>rts_start (27 samples, 0.07%)</title><rect x="389.3" y="149" width="0.8" height="15.0" fill="rgb(239,145,37)" rx="2" ry="2" />
<text  x="392.29" y="159.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="366.0" y="133" width="1.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="368.98" y="143.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;B&gt; (420 samples, 1.04%)</title><rect x="746.9" y="149" width="12.3" height="15.0" fill="rgb(251,176,51)" rx="2" ry="2" />
<text  x="749.90" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::hcc0e5f4cb7cba5e9 (500 samples, 1.24%)</title><rect x="1136.3" y="117" width="14.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="1139.30" y="127.5" ></text>
</g>
<g >
<title>insertRoot (789 samples, 1.95%)</title><rect x="718.9" y="133" width="23.0" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="721.89" y="143.5" >i..</text>
</g>
<g >
<title>to_2_tuple (627 samples, 1.55%)</title><rect x="556.4" y="85" width="18.3" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="559.40" y="95.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="367.9" y="149" width="0.5" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="370.94" y="159.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (37 samples, 0.09%)</title><rect x="399.4" y="101" width="1.1" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="402.37" y="111.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (418 samples, 1.03%)</title><rect x="664.0" y="149" width="12.2" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="666.96" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="723.1" y="101" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="726.09" y="111.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="693.6" y="165" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="696.65" y="175.5" ></text>
</g>
<g >
<title>iterate (2,450 samples, 6.07%)</title><rect x="507.4" y="133" width="71.6" height="15.0" fill="rgb(245,143,45)" rx="2" ry="2" />
<text  x="510.43" y="143.5" >iterate</text>
</g>
<g >
<title>alloc_words (126 samples, 0.31%)</title><rect x="547.0" y="85" width="3.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="550.02" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::h98bc6a3e2ad1f00a (237 samples, 0.59%)</title><rect x="642.3" y="69" width="6.9" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="645.29" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::hcc0e5f4cb7cba5e9 (325 samples, 0.80%)</title><rect x="242.1" y="117" width="9.4" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="245.05" y="127.5" ></text>
</g>
<g >
<title>opt_inject (30 samples, 0.07%)</title><rect x="434.2" y="117" width="0.8" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="437.16" y="127.5" ></text>
</g>
<g >
<title>toArray (4,950 samples, 12.26%)</title><rect x="446.3" y="149" width="144.6" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="449.26" y="159.5" >toArray</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="1150.9" y="133" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="1153.91" y="143.5" ></text>
</g>
<g >
<title>trans_state6 (13 samples, 0.03%)</title><rect x="694.9" y="165" width="0.4" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="697.87" y="175.5" ></text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="526.0" y="69" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="529.04" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (33 samples, 0.08%)</title><rect x="549.7" y="69" width="1.0" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="552.74" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he85fb095f2459d33 (879 samples, 2.18%)</title><rect x="1085.3" y="133" width="25.6" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="1088.27" y="143.5" >m..</text>
</g>
<g >
<title>@serialize_go&lt;u&gt; (4 samples, 0.01%)</title><rect x="703.1" y="117" width="0.1" height="15.0" fill="rgb(243,156,42)" rx="2" ry="2" />
<text  x="706.08" y="127.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="737.6" y="101" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="740.64" y="111.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.28%)</title><rect x="435.0" y="117" width="3.4" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="438.04" y="127.5" ></text>
</g>
<g >
<title>$lambda (6,829 samples, 16.91%)</title><rect x="391.4" y="165" width="199.5" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="394.37" y="175.5" >$lambda</text>
</g>
<g >
<title>get (731 samples, 1.81%)</title><rect x="637.3" y="149" width="21.4" height="15.0" fill="rgb(237,170,35)" rx="2" ry="2" />
<text  x="640.32" y="159.5" >get</text>
</g>
<g >
<title>retrieve (2,452 samples, 6.07%)</title><rect x="624.0" y="181" width="71.6" height="15.0" fill="rgb(240,162,39)" rx="2" ry="2" />
<text  x="627.00" y="191.5" >retrieve</text>
</g>
<g >
<title>@buffer_size&lt;u&gt; (14 samples, 0.03%)</title><rect x="702.7" y="117" width="0.4" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="705.67" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::hd71251f77789891b (948 samples, 2.35%)</title><rect x="223.8" y="133" width="27.7" height="15.0" fill="rgb(229,127,26)" rx="2" ry="2" />
<text  x="226.85" y="143.5" >m..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (44 samples, 0.11%)</title><rect x="729.7" y="85" width="1.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="732.70" y="95.5" ></text>
</g>
<g >
<title>opt_project (135 samples, 0.33%)</title><rect x="552.5" y="85" width="3.9" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="555.45" y="95.5" ></text>
</g>
<g >
<title>link_start (41 samples, 0.10%)</title><rect x="388.9" y="165" width="1.2" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="391.88" y="175.5" ></text>
</g>
<g >
<title>parse_idl_header (576 samples, 1.43%)</title><rect x="602.4" y="149" width="16.8" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="605.38" y="159.5" ></text>
</g>
<g >
<title>opt_inject (60 samples, 0.15%)</title><rect x="550.7" y="85" width="1.8" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="553.70" y="95.5" ></text>
</g>
<g >
<title>obj_idx&lt;6&gt; (34 samples, 0.08%)</title><rect x="445.3" y="149" width="1.0" height="15.0" fill="rgb(240,139,39)" rx="2" ry="2" />
<text  x="448.27" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="618.6" y="133" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="621.57" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::ha46d3b5f52346233 (1,280 samples, 3.17%)</title><rect x="1151.6" y="133" width="37.3" height="15.0" fill="rgb(244,127,43)" rx="2" ry="2" />
<text  x="1154.55" y="143.5" >mot..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="367.1" y="117" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="370.12" y="127.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.24%)</title><rect x="653.9" y="53" width="2.7" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="656.86" y="63.5" ></text>
</g>
<g >
<title>anon-func-116.7 (31 samples, 0.08%)</title><rect x="587.5" y="101" width="0.9" height="15.0" fill="rgb(239,164,38)" rx="2" ry="2" />
<text  x="590.51" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="750.6" y="133" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="753.56" y="143.5" ></text>
</g>
<g >
<title>blob_of_principal (2,176 samples, 5.39%)</title><rect x="302.1" y="149" width="63.6" height="15.0" fill="rgb(228,110,25)" rx="2" ry="2" />
<text  x="305.12" y="159.5" >blob_o..</text>
</g>
<g >
<title>Array_init (293 samples, 0.73%)</title><rect x="517.0" y="85" width="8.5" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="519.96" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (88 samples, 0.22%)</title><rect x="431.6" y="101" width="2.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="434.59" y="111.5" ></text>
</g>
<g >
<title>init (3,145 samples, 7.79%)</title><rect x="276.5" y="165" width="91.9" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="279.49" y="175.5" >init</text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="773.0" y="149" width="2.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="776.02" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="693.3" y="149" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="696.33" y="159.5" ></text>
</g>
<g >
<title>@deserialize&lt;t&gt; (1,109 samples, 2.75%)</title><rect x="659.6" y="165" width="32.4" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="662.61" y="175.5" >@d..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="741.6" y="85" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="744.62" y="95.5" ></text>
</g>
<g >
<title>memcpy (118 samples, 0.29%)</title><rect x="413.6" y="117" width="3.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="416.60" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="788.7" y="133" width="0.4" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="791.74" y="143.5" ></text>
</g>
<g >
<title>Buffer (1,948 samples, 4.82%)</title><rect x="448.1" y="133" width="56.9" height="15.0" fill="rgb(241,127,40)" rx="2" ry="2" />
<text  x="451.07" y="143.5" >Buffer</text>
</g>
<g >
<title>to_4_tuple (63 samples, 0.16%)</title><rect x="734.9" y="101" width="1.9" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="737.93" y="111.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.26%)</title><rect x="1082.2" y="133" width="3.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1085.23" y="143.5" ></text>
</g>
<g >
<title>B_add (26 samples, 0.06%)</title><rect x="525.5" y="85" width="0.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="528.52" y="95.5" ></text>
</g>
<g >
<title>entries (722 samples, 1.79%)</title><rect x="417.3" y="149" width="21.1" height="15.0" fill="rgb(237,196,36)" rx="2" ry="2" />
<text  x="420.28" y="159.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.13%)</title><rect x="574.7" y="101" width="1.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="577.71" y="111.5" ></text>
</g>
<g >
<title>@serialize&lt;&gt; (253 samples, 0.63%)</title><rect x="700.8" y="133" width="7.4" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="703.83" y="143.5" ></text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="368.7" y="165" width="0.7" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="371.69" y="175.5" ></text>
</g>
<g >
<title>compacting_gc (9,110 samples, 22.55%)</title><rect x="10.4" y="165" width="266.1" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="13.35" y="175.5" >compacting_gc</text>
</g>
<g >
<title>utf8_validate (211 samples, 0.52%)</title><rect x="766.9" y="133" width="6.1" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="769.86" y="143.5" ></text>
</g>
<g >
<title>Array_tabulate (238 samples, 0.59%)</title><rect x="581.5" y="117" width="6.9" height="15.0" fill="rgb(245,150,45)" rx="2" ry="2" />
<text  x="584.46" y="127.5" ></text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="1188.9" y="165" width="0.7" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="1191.95" y="175.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.01%)</title><rect x="531.8" y="85" width="0.2" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="534.83" y="95.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="708.2" y="133" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="711.22" y="143.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="516.6" y="69" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="519.61" y="79.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="637.2" y="133" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="640.20" y="143.5" ></text>
</g>
<g >
<title>@buffer_size&lt;vt&gt; (145 samples, 0.36%)</title><rect x="396.6" y="117" width="4.2" height="15.0" fill="rgb(237,118,36)" rx="2" ry="2" />
<text  x="399.57" y="127.5" ></text>
</g>
<g >
<title>@serialize_go&lt;B&gt; (102 samples, 0.25%)</title><rect x="629.6" y="117" width="3.0" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="632.58" y="127.5" ></text>
</g>
<g >
<title>alloc_words (1,344 samples, 3.33%)</title><rect x="465.7" y="117" width="39.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="468.72" y="127.5" >all..</text>
</g>
<g >
<title>alloc_blob (200 samples, 0.50%)</title><rect x="407.8" y="117" width="5.8" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="410.75" y="127.5" ></text>
</g>
<g >
<title>compare (625 samples, 1.55%)</title><rect x="640.4" y="117" width="18.3" height="15.0" fill="rgb(248,149,47)" rx="2" ry="2" />
<text  x="643.42" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="717.3" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="720.31" y="159.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="630.5" y="101" width="0.3" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="633.46" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="619.6" y="165" width="2.9" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="622.56" y="175.5" ></text>
</g>
<g >
<title>@serialize&lt;vt&gt; (827 samples, 2.05%)</title><rect x="392.9" y="133" width="24.1" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="395.88" y="143.5" >@..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="349.6" y="117" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="352.65" y="127.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.33%)</title><rect x="682.9" y="133" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="685.87" y="143.5" ></text>
</g>
<g >
<title>anon-func-165.17 (546 samples, 1.35%)</title><rect x="511.9" y="117" width="16.0" height="15.0" fill="rgb(233,164,31)" rx="2" ry="2" />
<text  x="514.93" y="127.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="515.0" y="69" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="518.03" y="79.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="731.2" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="734.16" y="111.5" ></text>
</g>
<g >
<title>@serialize&lt;B&gt; (357 samples, 0.88%)</title><rect x="626.8" y="133" width="10.4" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="629.78" y="143.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="403.7" y="85" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="406.72" y="95.5" ></text>
</g>
<g >
<title>memcmp (179 samples, 0.44%)</title><rect x="327.4" y="133" width="5.2" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="330.41" y="143.5" ></text>
</g>
<g >
<title>sleb128_decode (420 samples, 1.04%)</title><rect x="789.1" y="133" width="12.2" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="792.06" y="143.5" ></text>
</g>
<g >
<title>parse_idl_header (902 samples, 2.23%)</title><rect x="775.0" y="149" width="26.3" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="777.98" y="159.5" >p..</text>
</g>
<g >
<title>B_eq (10 samples, 0.02%)</title><rect x="526.3" y="85" width="0.3" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="529.28" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="525.2" y="37" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="528.20" y="47.5" ></text>
</g>
<g >
<title>B_ge (11 samples, 0.03%)</title><rect x="526.6" y="85" width="0.3" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="529.57" y="95.5" ></text>
</g>
<g >
<title>Array.idx (96 samples, 0.24%)</title><rect x="520.9" y="69" width="2.8" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="523.87" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="251.5" y="133" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="254.54" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::types::object_size::ha46d3b5f52346233 (832 samples, 2.06%)</title><rect x="252.2" y="133" width="24.3" height="15.0" fill="rgb(244,127,43)" rx="2" ry="2" />
<text  x="255.19" y="143.5" >m..</text>
</g>
<g >
<title>@deserialize&lt;tB&gt; (2,201 samples, 5.45%)</title><rect x="741.9" y="165" width="64.3" height="15.0" fill="rgb(245,176,45)" rx="2" ry="2" />
<text  x="744.94" y="175.5" >@deseri..</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="710.9" y="133" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="713.85" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::he0ff8983f37454e0 (12,989 samples, 32.16%)</title><rect x="809.5" y="149" width="379.4" height="15.0" fill="rgb(236,127,34)" rx="2" ry="2" />
<text  x="812.48" y="159.5" >motoko_rts::gc::mark_compact::compacting_gc::he0ff8..</text>
</g>
<g >
<title>@reset_cycles (6 samples, 0.01%)</title><rect x="619.2" y="165" width="0.2" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="622.21" y="175.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (55 samples, 0.14%)</title><rect x="715.7" y="133" width="1.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="718.70" y="143.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (474 samples, 1.17%)</title><rect x="759.2" y="149" width="13.8" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="762.17" y="159.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="630.8" y="101" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="633.81" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="420.2" y="117" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="423.20" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="658.7" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="661.68" y="159.5" ></text>
</g>
<g >
<title>parse_idl_header (391 samples, 0.97%)</title><rect x="678.1" y="149" width="11.5" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="681.13" y="159.5" ></text>
</g>
<g >
<title>leb128_encode (24 samples, 0.06%)</title><rect x="407.1" y="101" width="0.7" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="410.05" y="111.5" ></text>
</g>
<g >
<title>Blob.compare_eq (47 samples, 0.12%)</title><rect x="708.3" y="149" width="1.4" height="15.0" fill="rgb(239,126,38)" rx="2" ry="2" />
<text  x="711.34" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="621.8" y="149" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="624.84" y="159.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="588.1" y="69" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="591.07" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="739.5" y="85" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="742.46" y="95.5" ></text>
</g>
<g >
<title>memcpy (72 samples, 0.18%)</title><rect x="706.1" y="117" width="2.1" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="709.12" y="127.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="588.4" y="117" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="591.42" y="127.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="404.9" y="69" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="407.95" y="79.5" ></text>
</g>
<g >
<title>B_add (26 samples, 0.06%)</title><rect x="511.2" y="117" width="0.7" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="514.17" y="127.5" ></text>
</g>
<g >
<title>next (1,684 samples, 4.17%)</title><rect x="527.9" y="117" width="49.2" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="530.88" y="127.5" >next</text>
</g>
<g >
<title>canister_init (12,301 samples, 30.45%)</title><rect x="10.0" y="181" width="359.4" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="13.00" y="191.5" >canister_init</text>
</g>
<g >
<title>text_compare (277 samples, 0.69%)</title><rect x="649.4" y="85" width="8.1" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="652.36" y="95.5" ></text>
</g>
<g >
<title>link_start (709 samples, 1.76%)</title><rect x="369.4" y="181" width="20.7" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="372.37" y="191.5" ></text>
</g>
<g >
<title>utf8_validate (185 samples, 0.46%)</title><rect x="670.8" y="133" width="5.4" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="673.77" y="143.5" ></text>
</g>
<g >
<title>init (22 samples, 0.05%)</title><rect x="389.4" y="133" width="0.7" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="392.44" y="143.5" ></text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="676.2" y="149" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="679.18" y="159.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="418.4" y="133" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="421.39" y="143.5" ></text>
</g>
<g >
<title>Text.compare_lt (282 samples, 0.70%)</title><rect x="649.2" y="101" width="8.3" height="15.0" fill="rgb(226,187,24)" rx="2" ry="2" />
<text  x="652.21" y="111.5" ></text>
</g>
<g >
<title>__wasm_call_ctors (666 samples, 1.65%)</title><rect x="369.4" y="165" width="19.5" height="15.0" fill="rgb(239,119,38)" rx="2" ry="2" />
<text  x="372.43" y="175.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.13%)</title><rect x="577.1" y="117" width="1.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="580.08" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="807.6" y="149" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="810.55" y="159.5" ></text>
</g>
<g >
<title>sleb128_decode (84 samples, 0.21%)</title><rect x="689.6" y="149" width="2.4" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="692.56" y="159.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="749.1" y="133" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="752.10" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="734.3" y="69" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="737.28" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="334.0" y="133" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="337.05" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h98668a022d1f7054 (61 samples, 0.15%)</title><rect x="523.7" y="53" width="1.8" height="15.0" fill="rgb(241,127,40)" rx="2" ry="2" />
<text  x="526.74" y="63.5" ></text>
</g>
<g >
<title>obj_idx&lt;11&gt; (34 samples, 0.08%)</title><rect x="579.0" y="133" width="1.0" height="15.0" fill="rgb(245,139,44)" rx="2" ry="2" />
<text  x="582.01" y="143.5" ></text>
</g>
<g >
<title>alloc_words (210 samples, 0.52%)</title><rect x="711.2" y="149" width="6.1" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="714.18" y="159.5" ></text>
</g>
<g >
<title>obj_idx&lt;1&gt; (17 samples, 0.04%)</title><rect x="717.8" y="149" width="0.5" height="15.0" fill="rgb(246,139,45)" rx="2" ry="2" />
<text  x="720.81" y="159.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="740.7" y="101" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="743.71" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="694.6" y="149" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="697.55" y="159.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (970 samples, 2.40%)</title><rect x="590.9" y="165" width="28.3" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="593.87" y="175.5" >@d..</text>
</g>
<g >
<title>memcpy (59 samples, 0.15%)</title><rect x="635.5" y="117" width="1.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="638.48" y="127.5" ></text>
</g>
<g >
<title>getRec (719 samples, 1.78%)</title><rect x="637.7" y="133" width="21.0" height="15.0" fill="rgb(230,170,27)" rx="2" ry="2" />
<text  x="640.67" y="143.5" ></text>
</g>
<g >
<title>trans_state6 (26 samples, 0.06%)</title><rect x="622.5" y="165" width="0.7" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="625.48" y="175.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (129 samples, 0.32%)</title><rect x="402.9" y="101" width="3.8" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="405.93" y="111.5" ></text>
</g>
<g >
<title>@buffer_size&lt;B&gt; (33 samples, 0.08%)</title><rect x="628.6" y="117" width="1.0" height="15.0" fill="rgb(251,118,51)" rx="2" ry="2" />
<text  x="631.62" y="127.5" ></text>
</g>
<g >
<title>RBTree (665 samples, 1.65%)</title><rect x="278.8" y="149" width="19.4" height="15.0" fill="rgb(246,213,46)" rx="2" ry="2" />
<text  x="281.77" y="159.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="667.2" y="117" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="670.24" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="367.4" y="149" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="370.44" y="159.5" ></text>
</g>
<g >
<title>alloc_words (462 samples, 1.14%)</title><rect x="284.7" y="133" width="13.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="287.70" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="750.2" y="117" width="0.4" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="753.24" y="127.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.26%)</title><rect x="203.7" y="133" width="3.0" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="206.66" y="143.5" ></text>
</g>
<g >
<title>sleb128_decode (84 samples, 0.21%)</title><rect x="687.1" y="133" width="2.5" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="690.10" y="143.5" ></text>
</g>
<g >
<title>$lambda (262 samples, 0.65%)</title><rect x="700.7" y="149" width="7.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="703.69" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="686.8" y="133" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="689.78" y="143.5" ></text>
</g>
<g >
<title>map (236 samples, 0.58%)</title><rect x="438.4" y="149" width="6.9" height="15.0" fill="rgb(240,99,39)" rx="2" ry="2" />
<text  x="441.37" y="159.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="298.2" y="149" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="301.20" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::he0ff8983f37454e0 (9,097 samples, 22.52%)</title><rect x="10.7" y="149" width="265.8" height="15.0" fill="rgb(236,127,34)" rx="2" ry="2" />
<text  x="13.73" y="159.5" >motoko_rts::gc::mark_compact::compa..</text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="760.2" y="133" width="2.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="763.20" y="143.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="692.2" y="165" width="1.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="695.19" y="175.5" ></text>
</g>
<g >
<title>iter (600 samples, 1.49%)</title><rect x="420.8" y="133" width="17.6" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="423.84" y="143.5" ></text>
</g>
<g >
<title>text_to_buf (86 samples, 0.21%)</title><rect x="404.2" y="85" width="2.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="407.19" y="95.5" ></text>
</g>
<g >
<title>memcpy (90 samples, 0.22%)</title><rect x="762.4" y="117" width="2.7" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="765.45" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="703.2" y="117" width="2.9" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="706.20" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="586.9" y="69" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="589.87" y="79.5" ></text>
</g>
<g >
<title>toArray (372 samples, 0.92%)</title><rect x="580.0" y="133" width="10.9" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="583.00" y="143.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="435.9" y="101" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="438.92" y="111.5" ></text>
</g>
<g >
<title>memcpy (48 samples, 0.12%)</title><rect x="332.6" y="133" width="1.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="335.64" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="705.5" y="101" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="708.48" y="111.5" ></text>
</g>
<g >
<title>put (809 samples, 2.00%)</title><rect x="718.3" y="149" width="23.6" height="15.0" fill="rgb(234,152,31)" rx="2" ry="2" />
<text  x="721.30" y="159.5" >put</text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="511.7" y="101" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="514.70" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="658.4" y="85" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="661.36" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::text::blob_of_text::h8e27db81f6b7939c (20 samples, 0.05%)</title><rect x="363.8" y="133" width="0.6" height="15.0" fill="rgb(235,127,33)" rx="2" ry="2" />
<text  x="366.79" y="143.5" ></text>
</g>
<g >
<title>$lambda (1,530 samples, 3.79%)</title><rect x="697.2" y="165" width="44.7" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="700.24" y="175.5" >$lam..</text>
</g>
<g >
<title>__wasm_apply_data_relocs (665 samples, 1.65%)</title><rect x="369.5" y="149" width="19.4" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="372.45" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (121 samples, 0.30%)</title><rect x="571.2" y="53" width="3.5" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="574.18" y="63.5" ></text>
</g>
<g >
<title>leb128_decode (134 samples, 0.33%)</title><rect x="784.8" y="133" width="3.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="787.83" y="143.5" ></text>
</g>
<g >
<title>text_compare (277 samples, 0.69%)</title><rect x="641.1" y="85" width="8.1" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="644.12" y="95.5" ></text>
</g>
<g >
<title>insertRec (440 samples, 1.09%)</title><rect x="723.9" y="117" width="12.9" height="15.0" fill="rgb(230,167,27)" rx="2" ry="2" />
<text  x="726.91" y="127.5" ></text>
</g>
<g >
<title>alloc_words (168 samples, 0.42%)</title><rect x="440.4" y="133" width="4.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="443.36" y="143.5" ></text>
</g>
<g >
<title>anon-func-43.3 (6 samples, 0.01%)</title><rect x="527.2" y="85" width="0.2" height="15.0" fill="rgb(248,164,48)" rx="2" ry="2" />
<text  x="530.21" y="95.5" ></text>
</g>
<g >
<title>add (518 samples, 1.28%)</title><rect x="512.3" y="101" width="15.1" height="15.0" fill="rgb(253,156,53)" rx="2" ry="2" />
<text  x="515.25" y="111.5" ></text>
</g>
<g >
<title>text_of_ptr_size (161 samples, 0.40%)</title><rect x="762.2" y="133" width="4.7" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="765.15" y="143.5" ></text>
</g>
<g >
<title>all (40,391 samples, 100%)</title><rect x="10.0" y="197" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>opt_inject (15 samples, 0.04%)</title><rect x="576.2" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="579.20" y="111.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.15%)</title><rect x="752.5" y="133" width="1.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="755.51" y="143.5" ></text>
</g>
<g >
<title>compacting_gc (13,002 samples, 32.19%)</title><rect x="809.1" y="165" width="379.8" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="812.10" y="175.5" >compacting_gc</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (352 samples, 0.87%)</title><rect x="494.7" y="101" width="10.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="497.70" y="111.5" ></text>
</g>
<g >
<title>alloc_words (336 samples, 0.83%)</title><rect x="424.3" y="117" width="9.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="427.35" y="127.5" ></text>
</g>
<g >
<title>text_of_ptr_size (131 samples, 0.32%)</title><rect x="666.9" y="133" width="3.9" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="669.94" y="143.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::ha2f80297c367636e (188 samples, 0.47%)</title><rect x="767.5" y="117" width="5.5" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="770.53" y="127.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="657.5" y="101" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="660.45" y="111.5" ></text>
</g>
<g >
<title>alloc_array (63 samples, 0.16%)</title><rect x="523.7" y="69" width="1.8" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="526.68" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="808.8" y="149" width="0.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="811.78" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::he85fb095f2459d33 (587 samples, 1.45%)</title><rect x="206.7" y="133" width="17.1" height="15.0" fill="rgb(242,127,41)" rx="2" ry="2" />
<text  x="209.70" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="506.8" y="117" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="509.79" y="127.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="400.5" y="101" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="403.45" y="111.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.24%)</title><rect x="645.6" y="53" width="2.8" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="648.62" y="63.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.04%)</title><rect x="527.4" y="101" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="530.39" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h2094e587e9f9c80e (61 samples, 0.15%)</title><rect x="765.1" y="117" width="1.8" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="768.08" y="127.5" ></text>
</g>
<g >
<title>__wasm_apply_global_relocs (12 samples, 0.03%)</title><rect x="388.9" y="149" width="0.4" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="391.94" y="159.5" ></text>
</g>
<g >
<title>Array.idx_bigint (24 samples, 0.06%)</title><rect x="587.7" y="85" width="0.7" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="590.72" y="95.5" ></text>
</g>
<g >
<title>anon-func-31.67 (12 samples, 0.03%)</title><rect x="531.7" y="101" width="0.3" height="15.0" fill="rgb(228,164,25)" rx="2" ry="2" />
<text  x="534.65" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (100 samples, 0.25%)</title><rect x="632.6" y="117" width="2.9" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="635.56" y="127.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::ha2f80297c367636e (162 samples, 0.40%)</title><rect x="671.4" y="117" width="4.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="674.44" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="437.7" y="85" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="440.73" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_get_range::h15ee242776face5a (28 samples, 0.07%)</title><rect x="656.6" y="53" width="0.9" height="15.0" fill="rgb(229,127,26)" rx="2" ry="2" />
<text  x="659.63" y="63.5" ></text>
</g>
<g >
<title>$lambda (1,179 samples, 2.92%)</title><rect x="625.2" y="165" width="34.4" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="628.17" y="175.5" >$l..</text>
</g>
<g >
<title>leb128_decode (67 samples, 0.17%)</title><rect x="665.0" y="133" width="1.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="667.99" y="143.5" ></text>
</g>
<g >
<title>to_2_tuple (114 samples, 0.28%)</title><rect x="731.6" y="101" width="3.3" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="734.60" y="111.5" ></text>
</g>
<g >
<title>$lambda (366 samples, 0.91%)</title><rect x="626.6" y="149" width="10.7" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="629.63" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h2094e587e9f9c80e (61 samples, 0.15%)</title><rect x="669.0" y="117" width="1.8" height="15.0" fill="rgb(243,127,42)" rx="2" ry="2" />
<text  x="671.99" y="127.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="807.9" y="165" width="1.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="810.88" y="175.5" ></text>
</g>
<g >
<title>compute_crc32 (33 samples, 0.08%)</title><rect x="348.7" y="117" width="0.9" height="15.0" fill="rgb(245,149,44)" rx="2" ry="2" />
<text  x="351.68" y="127.5" ></text>
</g>
<g >
<title>@reset_refund (6 samples, 0.01%)</title><rect x="619.4" y="165" width="0.2" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="622.38" y="175.5" ></text>
</g>
<g >
<title>alloc_array (126 samples, 0.31%)</title><rect x="583.8" y="101" width="3.7" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="586.83" y="111.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="299.7" y="149" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="302.66" y="159.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="583.5" y="101" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="586.48" y="111.5" ></text>
</g>
<g >
<title>trans_state7 (13 samples, 0.03%)</title><rect x="695.3" y="165" width="0.3" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="698.25" y="175.5" ></text>
</g>
<g >
<title>leb128_decode (268 samples, 0.66%)</title><rect x="610.7" y="133" width="7.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="613.74" y="143.5" ></text>
</g>
<g >
<title>alloc_blob (50 samples, 0.12%)</title><rect x="709.7" y="149" width="1.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="712.71" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::types::Blob::shrink::h14b86b8c0774f2df (90 samples, 0.22%)</title><rect x="361.2" y="117" width="2.6" height="15.0" fill="rgb(249,127,48)" rx="2" ry="2" />
<text  x="364.16" y="127.5" ></text>
</g>
<g >
<title>alloc_words (168 samples, 0.42%)</title><rect x="726.1" y="101" width="4.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="729.07" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="301.5" y="133" width="0.6" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="304.47" y="143.5" ></text>
</g>
<g >
<title>trans_state3 (11 samples, 0.03%)</title><rect x="368.4" y="165" width="0.3" height="15.0" fill="rgb(245,158,44)" rx="2" ry="2" />
<text  x="371.37" y="175.5" ></text>
</g>
<g >
<title>Array.idx_bigint (24 samples, 0.06%)</title><rect x="516.3" y="85" width="0.7" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="519.26" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::enc_stash::h74de5b2cada04185 (372 samples, 0.92%)</title><rect x="350.3" y="117" width="10.9" height="15.0" fill="rgb(247,127,47)" rx="2" ry="2" />
<text  x="353.29" y="127.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.01%)</title><rect x="731.0" y="101" width="0.2" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="733.98" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="736.4" y="69" width="0.4" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="739.45" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (44 samples, 0.11%)</title><rect x="444.0" y="117" width="1.3" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="446.98" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="515.9" y="53" width="0.4" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="518.94" y="63.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (121 samples, 0.30%)</title><rect x="294.7" y="117" width="3.5" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="297.67" y="127.5" ></text>
</g>
<g >
<title>list (8,007 samples, 19.82%)</title><rect x="390.1" y="181" width="233.9" height="15.0" fill="rgb(232,113,30)" rx="2" ry="2" />
<text  x="393.08" y="191.5" >list</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="299.3" y="133" width="0.4" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="302.34" y="143.5" ></text>
</g>
<g >
<title>sleb128_decode (168 samples, 0.42%)</title><rect x="754.3" y="133" width="4.9" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="757.27" y="143.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.01%)</title><rect x="723.7" y="117" width="0.2" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="726.74" y="127.5" ></text>
</g>
<g >
<title>alloc_words (462 samples, 1.14%)</title><rect x="561.2" y="69" width="13.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="564.22" y="79.5" ></text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="659.2" y="149" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="662.17" y="159.5" ></text>
</g>
<g >
<title>trans_state5 (13 samples, 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(241,158,40)" rx="2" ry="2" />
<text  x="1192.62" y="175.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="406.7" y="101" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="409.70" y="111.5" ></text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="404.1" y="85" width="0.1" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="407.07" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (11 samples, 0.03%)</title><rect x="766.5" y="101" width="0.4" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="769.54" y="111.5" ></text>
</g>
<g >
<title>alloc_words (42 samples, 0.10%)</title><rect x="735.5" y="85" width="1.3" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="738.54" y="95.5" ></text>
</g>
<g >
<title>@serialize_go&lt;vt&gt; (238 samples, 0.59%)</title><rect x="400.8" y="117" width="7.0" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="403.80" y="127.5" ></text>
</g>
<g >
<title>alloc_words (84 samples, 0.21%)</title><rect x="721.3" y="117" width="2.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="724.28" y="127.5" ></text>
</g>
<g >
<title>opt_project (15 samples, 0.04%)</title><rect x="578.6" y="117" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="581.57" y="127.5" ></text>
</g>
<g >
<title>memcpy (1,380 samples, 3.42%)</title><rect x="1041.9" y="133" width="40.3" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="1044.91" y="143.5" >mem..</text>
</g>
<g >
<title>motoko_rts::principal_id::principal_of_blob::ha705fefc6c24a380 (996 samples, 2.47%)</title><rect x="334.7" y="133" width="29.1" height="15.0" fill="rgb(237,127,36)" rx="2" ry="2" />
<text  x="337.69" y="143.5" >mo..</text>
</g>
<g >
<title>store (16,922 samples, 41.90%)</title><rect x="695.6" y="181" width="494.4" height="15.0" fill="rgb(246,150,45)" rx="2" ry="2" />
<text  x="698.63" y="191.5" >store</text>
</g>
<g >
<title>motoko_rts::memory::ic::grow_memory::h0ed59b220125f672 (22 samples, 0.05%)</title><rect x="590.2" y="101" width="0.7" height="15.0" fill="rgb(250,127,50)" rx="2" ry="2" />
<text  x="593.23" y="111.5" ></text>
</g>
<g >
<title>next (1,462 samples, 3.62%)</title><rect x="532.0" y="101" width="42.7" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="535.00" y="111.5" >next</text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="400.3" y="85" width="0.2" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="403.33" y="95.5" ></text>
</g>
</g>
</svg>
